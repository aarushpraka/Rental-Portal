{"version":3,"file":"static/js/555.837f7694.chunk.js","mappings":"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","sources":["pages/admin/AuthContext.jsx","pages/admin/AdminDashboard.jsx"],"sourcesContent":["\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '../../firebase'; \r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuthContext = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth || getAuth(), user => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser }}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { db } from '../../firebase';\r\nimport { createUserWithEmailAndPassword, getAuth, signOut } from 'firebase/auth';\r\nimport {\r\n  collection, getDocs, query, where, orderBy, setDoc,\r\n  doc, addDoc, updateDoc, deleteDoc, serverTimestamp, limit\r\n} from 'firebase/firestore';\r\nimport './AdminDashboard.css';\r\nimport {\r\n  FaUser, FaMoneyBillWave, FaBolt, FaBuilding,\r\n  FaExclamationTriangle, FaHome, FaBullhorn,\r\n  FaCog, FaReceipt, FaPlus, FaCheck, FaDownload, FaLayerGroup, FaTrash, FaSearch, FaChevronLeft, FaChevronRight, FaCalendarAlt, FaMoneyBill, FaCalculator\r\n} from 'react-icons/fa';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { toast } from 'react-toastify';\r\nimport { firestore } from '../../firebase';\r\nimport { useAuthContext } from './AuthContext';\r\n\r\n\r\n\r\nconst iconStyle = { color: '#c3b1e1', marginRight: '8px', verticalAlign: 'middle' };\r\nconst TENANT_ROLE = 'tenant';\r\nconst MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nconst CURRENT_YEAR = new Date().getFullYear();\r\nconst YEARS = [String(CURRENT_YEAR - 1), String(CURRENT_YEAR), String(CURRENT_YEAR + 1), String(CURRENT_YEAR + 2)];\r\n\r\n\r\nconst SummaryCard = ({ label, value }) => (\r\n  <div className=\"card summary-card\">{label}: <strong>{value}</strong></div>\r\n);\r\n\r\n\r\nfunction BillingForm({ type, tenants, addedByEmail, onRefreshBills, currency, numberFmt }) {\r\n  const [tenantId, setTenantId] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [month, setMonth] = useState(MONTHS[new Date().getMonth()]);\r\n  const [year, setYear] = useState(String(new Date().getFullYear()));\r\n  const [note, setNote] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [ok, setOk] = useState('');\r\n  const [err, setErr] = useState('');\r\n  const [currentUnit, setCurrentUnit] = useState('');\r\n  const [rate, setRate] = useState('');\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [lastUnitDefault, setLastUnitDefault] = useState(0);\r\n  const [lastUnit, setLastUnit] = useState('');\r\n\r\n  // Clear success/error messages after 3 seconds\r\n  useEffect(() => {\r\n    if (ok || err) {\r\n      const t = setTimeout(() => {\r\n        setOk('');\r\n        setErr('');\r\n      }, 3000);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [ok, err]);\r\n\r\n  // Format amount safely\r\n  const safeFormatAmt = (n) => {\r\n    try {\r\n      if (numberFmt?.format) return numberFmt.format(n);\r\n      return new Intl.NumberFormat('en-IN', { maximumFractionDigits: 2 }).format(n);\r\n    } catch {\r\n      return String(n);\r\n    }\r\n  };\r\n\r\nuseEffect(() => {\r\n  const loadLastUnit = async () => {\r\n    if (type !== 'electricity' || !tenantId || !month || !year) {\r\n      setLastUnitDefault(0);\r\n      setLastUnit('');\r\n      setStatusMessage('');\r\n      return;\r\n    }\r\n\r\n    // Calculate previous month and year\r\n    const monthIndex = MONTHS.indexOf(month);\r\n    let prevMonthIndex = monthIndex - 1;\r\n    let prevYear = parseInt(year);\r\n\r\n    if (prevMonthIndex < 0) {\r\n      prevMonthIndex = 11;\r\n      prevYear -= 1;\r\n    }\r\n\r\n    const prevMonth = MONTHS[prevMonthIndex];\r\n    const prevYearStr = String(prevYear);\r\n\r\n    try {\r\n      const billRef = collection(db, 'users', tenantId, 'bill');\r\n      const q = query(\r\n        billRef,\r\n        where('type', '==', 'electricity'),\r\n        where('month', '==', prevMonth),\r\n        where('year', '==', prevYearStr),\r\n        limit(1\r\n      ),)\r\n\r\n      const snap = await getDocs(q);\r\n      if (!snap.empty) {\r\n        const prev = snap.docs[0].data();\r\n        const prevCurr = Number(prev.currentUnit ?? prev.meterCurrent ?? 0);\r\n        if (Number.isFinite(prevCurr)) {\r\n          setLastUnitDefault(prevCurr);\r\n          setLastUnit(String(prevCurr));\r\n          setStatusMessage(`Fetched last unit from ${prevMonth} ${prevYearStr}: ${prevCurr}`);\r\n          return;\r\n        }\r\n      }\r\n\r\n      setLastUnitDefault(0);\r\n      setLastUnit('');\r\n      setStatusMessage(`No previous bill found for ${prevMonth} ${prevYearStr}`);\r\n    } catch (err) {\r\n      console.error('Error fetching previous bill:', err);\r\n      setLastUnitDefault(0);\r\n      setLastUnit('');\r\n      setStatusMessage('Error fetching previous bill');\r\n    }\r\n  };\r\n\r\n  loadLastUnit();\r\n}, [type, tenantId, month, year]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (type !== 'electricity') return;\r\n    const last = Number(lastUnit) || 0;\r\n    const curr = Number(currentUnit) || 0;\r\n    const r = Number(rate) || 0;\r\n    const units = Math.max(0, curr - last);\r\n    const amt = Math.max(0, units * r);\r\n    setAmount(amt ? String(amt.toFixed(2)) : '');\r\n  }, [type, lastUnit, currentUnit, rate]);\r\n\r\n  const handleSubmit = async () => {\r\n    setErr('');\r\n    setOk('');\r\n\r\n    if (!tenantId || !month || !year) {\r\n      setErr('Please fill all fields.');\r\n      return;\r\n    }\r\n\r\n    let amtNum = Number(amount);\r\n\r\n    if (type === 'electricity') {\r\n      const last = Number(lastUnit);\r\n      const curr = Number(currentUnit);\r\n      const r = Number(rate);\r\n\r\n      if (!Number.isFinite(last) || !Number.isFinite(curr) || !Number.isFinite(r)) {\r\n        setErr('Enter valid numbers for last unit, current unit, and rate.');\r\n        return;\r\n      }\r\n      if (curr < last) {\r\n        setErr('Current unit cannot be less than last unit.');\r\n        return;\r\n      }\r\n      const units = curr - last;\r\n      amtNum = +(units * r).toFixed(2);\r\n      if (!Number.isFinite(amtNum) || amtNum < 0) {\r\n        setErr('Calculated amount is invalid.');\r\n        return;\r\n      }\r\n    } else {\r\n      if (!amount) {\r\n        setErr('Please enter amount.');\r\n        return;\r\n      }\r\n      if (!Number.isFinite(amtNum)) {\r\n        setErr('Amount must be a number.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const billRef = collection(db, 'users', tenantId, 'bill');\r\n\r\n      const dupQ = query(\r\n        billRef,\r\n        where('type', '==', type),\r\n        where('month', '==', month),\r\n        where('year', '==', year)\r\n      );\r\n      const dupSnap = await getDocs(dupQ);\r\n      if (!dupSnap.empty) {\r\n        setErr('Duplicate bill for selected month/year.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const refId = `${type.toUpperCase()}-${month}-${year}-${tenantId}`;\r\n      const monthIdx = MONTHS.indexOf(month) + 1;\r\n      const billFor = `${year}-${String(monthIdx).padStart(2, '0')}-01`;\r\n\r\n      const baseDoc = {\r\n        addedBy: addedByEmail,\r\n        amount: amtNum,\r\n        billFor,\r\n        createdAt: serverTimestamp(),\r\n        month,\r\n        note: note || '',\r\n        refId,\r\n        status: 'Pending',\r\n        tenantId,\r\n        type,\r\n        updatedAt: serverTimestamp(),\r\n        year\r\n      };\r\n\r\n      const extra =\r\n        type === 'electricity'\r\n          ? {\r\n            lastUnit: Number(lastUnit) || 0,\r\n            currentUnit: Number(currentUnit) || 0,\r\n            unitsUsed: Math.max(0, (Number(currentUnit) || 0) - (Number(lastUnit) || 0)),\r\n            ratePerUnit: Number(rate) || 0\r\n          }\r\n          : {};\r\n\r\n      await addDoc(billRef, { ...baseDoc, ...extra });\r\n    } catch (e) {\r\n      setErr('Failed to add bill.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setOk(`Bill added (₹${Number(amtNum).toFixed(2)})`);\r\n      setTenantId('');\r\n      setAmount('');\r\n      setMonth(MONTHS[new Date().getMonth()]);\r\n      setYear(String(new Date().getFullYear()));\r\n      setNote('');\r\n      setCurrentUnit('');\r\n      setRate('');\r\n      setLastUnit(0);\r\n      setStatusMessage('');\r\n\r\n      if (onRefreshBills) await onRefreshBills();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tenant-form-container\">\r\n      <h2 className=\"form-heading\">\r\n        {type === 'rent' ? 'Set Rent Amount' : 'Set Electricity Amount'}\r\n      </h2>\r\n\r\n      <form onSubmit={(e) => e.preventDefault()} className=\"tenant-form\">\r\n        <div className=\"form-group\">\r\n          <select className=\"select\" value={tenantId} onChange={(e) => setTenantId(e.target.value)}>\r\n            <option value=\"\">Select Tenant</option>\r\n            {tenants.filter(t => t.active !== false).map(t => (\r\n              <option key={t.id} value={t.id}>{t.name} (Flat {t.flatNumber})</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <select className=\"select\" value={month} onChange={(e) => setMonth(e.target.value)}>\r\n            {MONTHS.map(m => <option key={m} value={m}>{m}</option>)}\r\n          </select>\r\n          <select className=\"select\" value={year} onChange={(e) => setYear(e.target.value)}>\r\n            {YEARS.map(y => <option key={y} value={y}>{y}</option>)}\r\n          </select>\r\n        </div>\r\n\r\n        {type === 'rent' ? (\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              placeholder=\"Amount\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"number\"\r\n                placeholder={`Last unit (auto from previous bill)`}\r\n                value={lastUnit}\r\n                onChange={(e) => setLastUnit(e.target.value)}\r\n                title=\"Last recorded meter reading\"\r\n              />\r\n              <input\r\n                className=\"input\"\r\n                type=\"number\"\r\n                placeholder=\"Current unit\"\r\n                value={currentUnit}\r\n                onChange={(e) => setCurrentUnit(e.target.value)}\r\n              />\r\n              <input\r\n                className=\"input\"\r\n                type=\"number\"\r\n                placeholder=\"Rate per unit\"\r\n                value={rate}\r\n                onChange={(e) => setRate(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\" style={{ gap: 8 }}>\r\n              <div className=\"input\" style={{ pointerEvents: 'none' }}>\r\n                Units used: {Math.max(0, (Number(currentUnit) || 0) - (Number(lastUnit) || 0))}\r\n              </div>\r\n              <div className=\"input\" style={{ pointerEvents: 'none' }}>\r\n                Calculated amount: ₹{safeFormatAmt(amount || 0)}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Optional note\"\r\n            value={note}\r\n            onChange={(e) => setNote(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {statusMessage && <p className=\"form-info\">ℹ️ {statusMessage}</p>}\r\n        {err && <p className=\"form-error\">⚠️ {err}</p>}\r\n        {ok && <p className=\"form-success\">✅ {ok}</p>}\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          disabled={loading}\r\n          onClick={handleSubmit}\r\n        >\r\n          {loading ? 'Saving...' : `Add ${type === 'rent' ? 'Rent' : 'Electricity'}`}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst AdminDashboard = () => {\r\n\r\n  const [tenants, setTenants] = useState([]);\r\n  const [bills, setBills] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activePanel, setActivePanel] = useState(null);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  const [formError, setFormError] = useState('');\r\n  const [formSuccess, setFormSuccess] = useState('');\r\n  const [newTenant, setNewTenant] = useState({\r\n    name: '', flatNumber: '', rentAmount: '',\r\n    joinedOn: new Date().toISOString().split('T')[0],\r\n    contact: '', email: '', password: ''\r\n  });\r\n\r\n  const [isMobile, setIsMobile] = useState(typeof window !== 'undefined' ? window.innerWidth <= 768 : true);\r\n  useEffect(() => {\r\n    const onResize = () => setIsMobile(window.innerWidth <= 768);\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n\r\n  const defaultSettings = {\r\n    addedByEmail: 'aarushpraka@gmail.com',\r\n    currency: '₹',\r\n    flatLimit: 10,\r\n    homeMonth: MONTHS[new Date().getMonth()],\r\n    homeYear: String(new Date().getFullYear()),\r\n    homeView: 'currentMonth',\r\n    showInactive: false,\r\n    pageSize: 10,\r\n    locale: 'en-IN'\r\n  };\r\n  const [settings, setSettings] = useState(() => {\r\n    const raw = localStorage.getItem('adminSettings');\r\n    return raw ? JSON.parse(raw) : defaultSettings;\r\n  });\r\n\r\n  const numberFmt = useMemo(() => new Intl.NumberFormat(settings.locale || 'en-IN', {\r\n    style: 'currency',\r\n    currency: settings.currencyCode || 'INR',\r\n    currencyDisplay: 'symbol',\r\n  }), [settings.locale, settings.currencyCode]);\r\n\r\n\r\n  const [filterTenantId, setFilterTenantId] = useState('');\r\n  const [filterType, setFilterType] = useState('all');\r\n  const [filterMonth, setFilterMonth] = useState('all');\r\n  const [filterYear, setFilterYear] = useState('all');\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  const [filterAddedBy, setFilterAddedBy] = useState('all');\r\n  const [filterSearch, setFilterSearch] = useState('');\r\n  const [billPage, setBillPage] = useState(1);\r\n\r\n  const [tenantSearch, setTenantSearch] = useState('');\r\n  const [tenantSort, setTenantSort] = useState('flatAsc');\r\n\r\n  const [bulkTenantId, setBulkTenantId] = useState('all');\r\n  const [bulkUseTenantRent, setBulkUseTenantRent] = useState(true);\r\n  const [bulkAmount, setBulkAmount] = useState('');\r\n  const [bulkStartMonth, setBulkStartMonth] = useState(MONTHS[new Date().getMonth()]);\r\n  const [bulkStartYear, setBulkStartYear] = useState(String(new Date().getFullYear()));\r\n  const [bulkEndMonth, setBulkEndMonth] = useState(MONTHS[new Date().getMonth()]);\r\n  const [bulkEndYear, setBulkEndYear] = useState(String(new Date().getFullYear()));\r\n  const [bulkLoading, setBulkLoading] = useState(false);\r\n\r\n  const saveSettings = (next) => {\r\n    const merged = { ...settings, ...next };\r\n    setSettings(merged);\r\n    localStorage.setItem('adminSettings', JSON.stringify(merged));\r\n  };\r\n\r\n  const refreshAll = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const tenantQ = query(collection(db, 'users'), where('role', '==', TENANT_ROLE));\r\n      const tenantSnap = await getDocs(tenantQ);\r\n      const tenantData = tenantSnap.docs.map(docu => ({\r\n        id: docu.id,\r\n        active: docu.data().active !== false,\r\n        ...docu.data()\r\n      }));\r\n      setTenants(tenantData);\r\n      const all = [];\r\n      for (const t of tenantData) {\r\n        const billsRef = collection(db, 'users', t.id, 'bill');\r\n        const snap = await getDocs(billsRef);\r\n        snap.forEach(d => all.push({ id: d.id, tenantId: t.id, ...d.data(), amount: Number(d.data().amount) }));\r\n      }\r\n      setBills(all);\r\n    } catch {\r\n      setFormError('Error loading data.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshAll();\r\n  }, []);\r\n  useEffect(() => {\r\n    const now = new Date();\r\n    const currentMonth = MONTHS[now.getMonth()];\r\n    const currentYear = now.getFullYear();\r\n\r\n    setFilterMonth(currentMonth);\r\n    setFilterYear(currentYear);\r\n  }, []);\r\n\r\n  const getTenantUidFromBill = (bill, tenants = []) => {\r\n    if (bill?.tenantUid) return bill.tenantUid;\r\n    if (bill?.tenantId) {\r\n      const t = tenants.find(x => x.id === bill.tenantId || x.uid === bill.tenantId || x.userUid === bill.tenantId);\r\n      if (t?.uid) return t.uid;\r\n      if (t?.userUid) return t.userUid;\r\n      return bill.tenantId; // if your bills already store the actual auth UID here\r\n    }\r\n    if (bill?.uid) return bill.uid;\r\n    return null;\r\n  };\r\n\r\n  const removeBill = async (bill) => {\r\n    const tenantUid = getTenantUidFromBill(bill, tenants);\r\n    if (!tenantUid || !bill?.id) {\r\n      toast.error('Missing tenant UID or bill ID');\r\n      return;\r\n    }\r\n    const ok = window.confirm(`Delete bill ${bill.refId || bill.id}?`);\r\n    if (!ok) return;\r\n\r\n    try {\r\n      await deleteDoc(doc(db, `users/${tenantUid}/bill/${bill.id}`));\r\n      setBills(prev => prev.filter(b => b.id !== bill.id));\r\n      toast.success('Bill removed');\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error('Failed to remove bill');\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setBillPage(1);\r\n  }, [filterTenantId, filterType, filterMonth, filterYear, filterStatus, filterAddedBy, filterSearch]);\r\n\r\n  const byTenant = useMemo(() => {\r\n    const m = new Map();\r\n    for (const b of bills) {\r\n      if (!m.has(b.tenantId)) m.set(b.tenantId, []);\r\n      m.get(b.tenantId).push(b);\r\n    }\r\n    return m;\r\n  }, [bills]);\r\n\r\n  const totalRentAll = useMemo(() =>\r\n    bills.filter(b => b.type === 'rent').reduce((s, b) => s + (Number(b.amount) || 0), 0), [bills]\r\n  );\r\n  const totalElecAll = useMemo(() =>\r\n    bills.filter(b => b.type === 'electricity').reduce((s, b) => s + (Number(b.amount) || 0), 0), [bills]\r\n  );\r\n\r\n  const addedByOptions = useMemo(() => {\r\n    const set = new Set(bills.map(b => b.addedBy).filter(Boolean));\r\n    return ['all', ...Array.from(set)];\r\n  }, [bills]);\r\n\r\n  const yearOptions = useMemo(() => {\r\n    const set = new Set(bills.map(b => String(b.year)).filter(Boolean));\r\n    const base = Array.from(set).sort();\r\n    const merged = Array.from(new Set([...base, ...YEARS]));\r\n    return ['all', ...merged];\r\n  }, [bills]);\r\n\r\n  const filteredBills = useMemo(() => {\r\n    const list = bills.filter(b => {\r\n      if (filterTenantId && b.tenantId !== filterTenantId) return false;\r\n      if (filterType !== 'all' && b.type !== filterType) return false;\r\n      if (filterMonth !== 'all' && b.month !== filterMonth) return false;\r\n      if (filterYear !== 'all' && String(b.year) !== String(filterYear)) return false;\r\n      if (filterStatus !== 'all' && b.status !== filterStatus) return false;\r\n      if (filterAddedBy !== 'all' && b.addedBy !== filterAddedBy) return false;\r\n      if (filterSearch) {\r\n        const txt = `${b.refId || ''} ${b.type || ''} ${b.month || ''} ${b.year || ''}`.toLowerCase();\r\n        if (!txt.includes(filterSearch.toLowerCase())) return false;\r\n      }\r\n      return true;\r\n    });\r\n    return list;\r\n  }, [bills, filterTenantId, filterType, filterMonth, filterYear, filterStatus, filterAddedBy, filterSearch]);\r\n\r\n  const totalsFiltered = useMemo(() => {\r\n    const rent = filteredBills.filter(b => b.type === 'rent').reduce((s, b) => s + (Number(b.amount) || 0), 0);\r\n    const elec = filteredBills.filter(b => b.type === 'electricity').reduce((s, b) => s + (Number(b.amount) || 0), 0);\r\n    return { rent, elec, grand: rent + elec };\r\n  }, [filteredBills]);\r\n\r\n  const totalBillPages = useMemo(() => Math.max(1, Math.ceil(filteredBills.length / Number(settings.pageSize || 10))), [filteredBills.length, settings.pageSize]);\r\n\r\n  const sortedBills = useMemo(() => {\r\n    const toMillis = (b) => {\r\n      if (b?.createdAt?.toDate) return b.createdAt.toDate().getTime();\r\n      if (b?.createdAt?.seconds) return b.createdAt.seconds * 1000;\r\n      if (b?.billFor) return new Date(b.billFor).getTime();\r\n      return 0;\r\n    };\r\n    return filteredBills.slice().sort((a, b) => toMillis(b) - toMillis(a));\r\n  }, [filteredBills]);\r\n\r\n  const paginatedBills = useMemo(() => {\r\n    const start = (billPage - 1) * Number(settings.pageSize || 10);\r\n    return sortedBills.slice(start, start + Number(settings.pageSize || 10));\r\n  }, [sortedBills, billPage, settings.pageSize]);\r\n\r\n  useEffect(() => {\r\n    if (billPage > totalBillPages) setBillPage(1);\r\n  }, [billPage, totalBillPages]);\r\n\r\n  const getCurrentBill = (tenantId, type) => {\r\n    const list = byTenant.get(tenantId) || [];\r\n    if (settings.homeView === 'currentMonth') {\r\n      return list.find(b => b.type === type && b.month === settings.homeMonth && String(b.year) === String(settings.homeYear));\r\n    }\r\n    const sameType = list.filter(b => b.type === type);\r\n    sameType.sort((a, b) => {\r\n      const as = a?.createdAt?.seconds || 0;\r\n      const bs = b?.createdAt?.seconds || 0;\r\n      return bs - as;\r\n    });\r\n    return sameType[0];\r\n  };\r\n\r\n  const monthIndex = (m) => MONTHS.indexOf(m);\r\n  const monthKey = (y, m) => `${y}-${String(m + 1).padStart(2, '0')}-01`;\r\n  const expandRange = (sMonth, sYear, eMonth, eYear) => {\r\n    const sm = monthIndex(sMonth);\r\n    const em = monthIndex(eMonth);\r\n    let curY = parseInt(sYear, 10);\r\n    let curM = sm;\r\n    const endY = parseInt(eYear, 10);\r\n    const endM = em;\r\n    const out = [];\r\n    while (curY < endY || (curY === endY && curM <= endM)) {\r\n      out.push({ month: MONTHS[curM], year: String(curY), billFor: monthKey(curY, curM) });\r\n      curM++;\r\n      if (curM > 11) { curM = 0; curY++; }\r\n    }\r\n    return out;\r\n  };\r\n\r\n  const handleAddTenant = async (e) => {\r\n    e.preventDefault();\r\n    setFormError('');\r\n    setFormSuccess('');\r\n    const { name, flatNumber, rentAmount, joinedOn, contact, email, password } = newTenant;\r\n    if (!name || !flatNumber || !rentAmount || !email || !password) { setFormError('Please fill all required fields.'); return; }\r\n    if (Number.isNaN(Number(rentAmount))) { setFormError('Rent must be numeric.'); return; }\r\n    if (tenants.some(t => `${t.flatNumber}`.trim() === `${flatNumber}`.trim())) { setFormError('Flat number already assigned.'); return; }\r\n    setFormLoading(true);\r\n    try {\r\n      const auth = getAuth();\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      const uid = userCredential.user.uid;\r\n      await setDoc(doc(db, 'users', uid), {\r\n        name, flatNumber, rentAmount: Number(rentAmount),\r\n        joinedOn, contact, role: TENANT_ROLE, email, active: true\r\n      });\r\n      setFormSuccess('Tenant added successfully.');\r\n      setNewTenant({\r\n        name: '', flatNumber: '', rentAmount: '',\r\n        joinedOn: new Date().toISOString().split('T')[0],\r\n        contact: '', email: '', password: ''\r\n      });\r\n      await refreshAll();\r\n    } catch {\r\n      setFormError('Failed to add tenant.');\r\n    } finally {\r\n      setFormLoading(false);\r\n    }\r\n  };\r\n\r\n  const markBillPaid = async (b) => {\r\n    if (!b?.tenantId || !b?.id) return;\r\n    try {\r\n      await updateDoc(doc(db, 'users', b.tenantId, 'bill', b.id), { status: 'Paid', updatedAt: serverTimestamp() });\r\n      await refreshAll();\r\n    } catch { }\r\n  };\r\n\r\n  const bulkMarkPaid = async () => {\r\n    if (!filteredBills.length) return;\r\n    const go = window.confirm(`Mark ${filteredBills.length} filtered bills as Paid?`);\r\n    if (!go) return;\r\n    for (const b of filteredBills) {\r\n      if (b.status === 'Paid') continue;\r\n      try {\r\n        await updateDoc(doc(db, 'users', b.tenantId, 'bill', b.id), { status: 'Paid', updatedAt: serverTimestamp() });\r\n      } catch { }\r\n    }\r\n    await refreshAll();\r\n  };\r\n\r\n  const exportCSV = (list = filteredBills, name = 'bills.csv') => {\r\n    const rows = [['Tenant', 'Flat', 'Type', 'Month', 'Year', 'Amount', 'Status', 'Added By', 'Created At', 'Ref ID']];\r\n    for (const b of list) {\r\n      const t = tenants.find(x => x.id === b.tenantId);\r\n      const created = b?.createdAt?.toDate ? b.createdAt.toDate().toISOString() : (b?.billFor || '');\r\n      rows.push([\r\n        t?.name || '', t?.flatNumber || '', b.type || '', b.month || '', String(b.year || ''),\r\n        String(Number(b.amount) || 0), b.status || '', b.addedBy || '', created, b.refId || ''\r\n      ]);\r\n    }\r\n    const csv = rows.map(r => r.map(x => `\"${String(x).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\n');\r\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = name;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n\r\n\r\n  const exportTenantStatement = (tenantId) => {\r\n    const list = bills.filter(b => b.tenantId === tenantId);\r\n    const t = tenants.find(x => x.id === tenantId);\r\n    exportCSV(list, `statement_${t?.name || tenantId}.csv`);\r\n  };\r\n\r\n  const bulkCreateRentRange = async () => {\r\n    setBulkLoading(true);\r\n    try {\r\n      const range = expandRange(bulkStartMonth, bulkStartYear, bulkEndMonth, bulkEndYear);\r\n      const targets = bulkTenantId === 'all' ? tenants.filter(t => t.active !== false) : tenants.filter(t => t.id === bulkTenantId);\r\n      const customAmount = Number(bulkAmount);\r\n      for (const t of targets) {\r\n        for (const r of range) {\r\n          const billsRef = collection(db, 'users', t.id, 'bill');\r\n          const dupQ = query(billsRef, where('type', '==', 'rent'), where('month', '==', r.month), where('year', '==', r.year));\r\n          const dupSnap = await getDocs(dupQ);\r\n          if (!dupSnap.empty) continue;\r\n          const amount = bulkUseTenantRent ? Number(t.rentAmount || 0) : (Number.isNaN(customAmount) ? 0 : customAmount);\r\n          const refId = `RENT-${r.month}-${r.year}-${t.id}`;\r\n          await addDoc(billsRef, {\r\n            addedBy: settings.addedByEmail,\r\n            amount,\r\n            billFor: r.billFor,\r\n            createdAt: serverTimestamp(),\r\n            month: r.month,\r\n            note: '',\r\n            refId,\r\n            status: 'Pending',\r\n            tenantId: t.id,\r\n            type: 'rent',\r\n            updatedAt: serverTimestamp(),\r\n            year: r.year\r\n          });\r\n        }\r\n      }\r\n      await refreshAll();\r\n      alert('Bulk rent bills created for selected range.');\r\n    } catch {\r\n      alert('Bulk creation failed.');\r\n    } finally {\r\n      setBulkLoading(false);\r\n    }\r\n  };\r\n\r\n  const removeTenant = async (tenantId) => {\r\n    const t = tenants.find(x => x.id === tenantId);\r\n    const go = window.confirm(`Remove tenant ${t?.name || tenantId}? This deletes their bills.`);\r\n    if (!go) return;\r\n    try {\r\n      const billsRef = collection(db, 'users', tenantId, 'bill');\r\n      const snap = await getDocs(billsRef);\r\n      for (const d of snap.docs) {\r\n        await deleteDoc(doc(db, 'users', tenantId, 'bill', d.id));\r\n      }\r\n      await deleteDoc(doc(db, 'users', tenantId));\r\n      await refreshAll();\r\n      alert('Tenant removed.');\r\n    } catch {\r\n      alert('Failed to remove tenant.');\r\n    }\r\n  };\r\n\r\n  const toggleActiveTenant = async (tenantId, active) => {\r\n    try {\r\n      await updateDoc(doc(db, 'users', tenantId), { active });\r\n      await refreshAll();\r\n    } catch { }\r\n  };\r\n\r\n  const updateTenantDetails = async (tenantId, data) => {\r\n    try {\r\n      await updateDoc(doc(db, 'users', tenantId), data);\r\n      await refreshAll();\r\n    } catch { }\r\n  };\r\n\r\n  const overdue = (b) => {\r\n    if (b.status === 'Paid') return false;\r\n    const nowY = new Date().getFullYear();\r\n    const nowM = new Date().getMonth();\r\n    const y = parseInt(b.year, 10);\r\n    const m = MONTHS.indexOf(b.month);\r\n    return y < nowY || (y === nowY && m < nowM);\r\n  };\r\n\r\n  const filteredTenants = useMemo(() => {\r\n    let list = tenants.filter(t => settings.showInactive ? true : (t.active !== false));\r\n    if (tenantSearch) {\r\n      const s = tenantSearch.toLowerCase();\r\n      list = list.filter(t => `${t.name || ''} ${t.flatNumber || ''}`.toLowerCase().includes(s));\r\n    }\r\n    if (tenantSort === 'flatAsc') list.sort((a, b) => String(a.flatNumber).localeCompare(String(b.flatNumber)));\r\n    if (tenantSort === 'flatDesc') list.sort((a, b) => String(b.flatNumber).localeCompare(String(a.flatNumber)));\r\n    if (tenantSort === 'nameAsc') list.sort((a, b) => String(a.name).localeCompare(String(b.name)));\r\n    if (tenantSort === 'nameDesc') list.sort((a, b) => String(b.name).localeCompare(String(a.name)));\r\n    return list;\r\n  }, [tenants, tenantSearch, tenantSort, settings.showInactive]);\r\n\r\n  const monthlyTotals = useMemo(() => {\r\n    const y = settings.homeYear;\r\n    const out = MONTHS.map(m => {\r\n      const rent = bills.filter(b => b.type === 'rent' && String(b.year) === String(y) && b.month === m).reduce((s, x) => s + (Number(x.amount) || 0), 0);\r\n      const elec = bills.filter(b => b.type === 'electricity' && String(b.year) === String(y) && b.month === m).reduce((s, x) => s + (Number(x.amount) || 0), 0);\r\n      return { month: m, rent, elec, total: rent + elec };\r\n    });\r\n    return out;\r\n  }, [bills, settings.homeYear]);\r\n\r\n  const inlineUpdateNote = async (b, note) => {\r\n    try {\r\n      await updateDoc(doc(db, 'users', b.tenantId, 'bill', b.id), { note, updatedAt: serverTimestamp() });\r\n      await refreshAll();\r\n    } catch { }\r\n  };\r\n\r\n  const inlineChangeStatus = async (b, status) => {\r\n    try {\r\n      await updateDoc(doc(db, 'users', b.tenantId, 'bill', b.id), { status, updatedAt: serverTimestamp() });\r\n      await refreshAll();\r\n    } catch { }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    const auth = getAuth();\r\n    signOut(auth).catch(() => { });\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\" style={{ backgroundColor: 'red' }}>\r\n      <div className=\"admin-layout\">\r\n        {!isMobile && (\r\n          <aside className=\"sidebar-left sidebar-fixed\">\r\n            <div className=\"sidebar-header\">\r\n              <h3 className=\"sidebar-title\">⚡ Quick Actions</h3>\r\n            </div>\r\n            <ul className=\"quick-action-list\">\r\n              <li className=\"quick-action-item\" onClick={() => { setActivePanel(null); }}><FaHome style={iconStyle} /> Home</li>\r\n              <li className=\"quick-action-item\" onClick={() => { setActivePanel('addTenant'); }}><FaPlus style={iconStyle} /> Add Tenant</li>\r\n              <li className=\"quick-action-item\" onClick={() => { setActivePanel('setRent'); }}><FaMoneyBillWave style={iconStyle} /> Set Rent</li>\r\n              <li className=\"quick-action-item\" onClick={() => { setActivePanel('setElectricity'); }}><FaBolt style={iconStyle} /> Set Electricity</li>\r\n              <li className=\"quick-action-item\" onClick={() => { setActivePanel('bulk'); }}><FaLayerGroup style={iconStyle} /> Bulk Tools</li>\r\n              <li className=\"quick-action-item\" onClick={() => { setActivePanel('billList'); }}><FaReceipt style={iconStyle} /> All Bills</li>\r\n              <li className=\"quick-action-item\" onClick={() => { setActivePanel('settings'); }}><FaCog style={iconStyle} /> Settings</li>\r\n\r\n            </ul>\r\n          </aside>\r\n        )}\r\n\r\n        <main className={`admin-main ${isMobile ? 'mobile' : 'desktop'}`}>\r\n          <div className=\"dashboard-header\">\r\n            <h2 className=\"dashboard-title\">Admin Dashboard</h2>\r\n            <div className=\"header-actions\">\r\n              <button className=\"btn logout-icon\" onClick={handleLogout} title=\"Logout\">\r\n                <FiLogOut />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dashboard-body\">\r\n            {activePanel === 'addTenant' && (\r\n              <div className=\"tenant-form-container\">\r\n                <h2 className=\"form-heading\">Add New Tenant</h2>\r\n                <form onSubmit={handleAddTenant} className=\"tenant-form\">\r\n                  <div className=\"form-group\">\r\n                    <input className=\"input\" type=\"text\" placeholder=\"Tenant Name\" value={newTenant.name} onChange={(e) => setNewTenant({ ...newTenant, name: e.target.value })} required />\r\n                    <input className=\"input\" type=\"text\" placeholder=\"Flat Number\" value={newTenant.flatNumber} onChange={(e) => setNewTenant({ ...newTenant, flatNumber: e.target.value })} required />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input className=\"input\" type=\"number\" placeholder=\"Rent Amount\" value={newTenant.rentAmount} onChange={(e) => setNewTenant({ ...newTenant, rentAmount: e.target.value })} required />\r\n                    <input className=\"input\" type=\"date\" value={newTenant.joinedOn} onChange={(e) => setNewTenant({ ...newTenant, joinedOn: e.target.value })} required />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input className=\"input\" type=\"email\" placeholder=\"Email\" value={newTenant.email} onChange={(e) => setNewTenant({ ...newTenant, email: e.target.value })} required />\r\n                    <input className=\"input\" type=\"password\" placeholder=\"Password\" value={newTenant.password} onChange={(e) => setNewTenant({ ...newTenant, password: e.target.value })} required />\r\n                  </div>\r\n                  {formError && <p className=\"form-error\">⚠️ {formError}</p>}\r\n                  {formSuccess && <p className=\"form-success\">✅ {formSuccess}</p>}\r\n                  <button type=\"submit\" className=\"btn btn-primary\" disabled={formLoading}>{formLoading ? 'Saving...' : 'Add Tenant'}</button>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activePanel === 'setRent' && (\r\n              <BillingForm\r\n                type=\"rent\"\r\n                tenants={tenants}\r\n                addedByEmail={settings.addedByEmail}\r\n                onRefreshBills={refreshAll}\r\n\r\n\r\n              />\r\n            )}\r\n\r\n            {activePanel === 'setElectricity' && (\r\n              <BillingForm\r\n                type=\"electricity\"\r\n                tenants={tenants}\r\n                addedByEmail={settings.addedByEmail}\r\n                onRefreshBills={refreshAll}\r\n\r\n\r\n              />\r\n            )}\r\n\r\n            {activePanel === 'bulk' && (\r\n\r\n              <div className=\"tenant-form-container\">\r\n                <h2 className=\"form-heading\">Bulk Rent Creation</h2>\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"tenant-form\">\r\n                  <div className=\"form-group\">\r\n                    <select className=\"select\" value={bulkTenantId} onChange={(e) => setBulkTenantId(e.target.value)}>\r\n                      <option value=\"all\">All Active Tenants</option>\r\n                      {tenants.filter(t => t.active !== false).map(t => (\r\n                        <option key={t.id} value={t.id}>{t.name} (Flat {t.flatNumber})</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <select className=\"select\" value={bulkStartMonth} onChange={(e) => setBulkStartMonth(e.target.value)}>\r\n                      {MONTHS.map(m => <option key={m} value={m}>{m}</option>)}\r\n                    </select>\r\n                    <select className=\"select\" value={bulkStartYear} onChange={(e) => setBulkStartYear(e.target.value)}>\r\n                      {YEARS.map(y => <option key={y} value={y}>{y}</option>)}\r\n                    </select>\r\n                    <span className=\"range-to\">to</span>\r\n                    <select className=\"select\" value={bulkEndMonth} onChange={(e) => setBulkEndMonth(e.target.value)}>\r\n                      {MONTHS.map(m => <option key={m} value={m}>{m}</option>)}\r\n                    </select>\r\n                    <select className=\"select\" value={bulkEndYear} onChange={(e) => setBulkEndYear(e.target.value)}>\r\n                      {YEARS.map(y => <option key={y} value={y}>{y}</option>)}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label className=\"checkbox\">\r\n                      <input type=\"checkbox\" checked={bulkUseTenantRent} onChange={(e) => setBulkUseTenantRent(e.target.checked)} />\r\n                      Use tenant rent amount\r\n                    </label>\r\n                    {!bulkUseTenantRent && (\r\n                      <input className=\"input\" type=\"number\" placeholder=\"Custom amount\" value={bulkAmount} onChange={(e) => setBulkAmount(e.target.value)} />\r\n                    )}\r\n                  </div>\r\n                  <button type=\"button\" className=\"btn btn-primary\" disabled={bulkLoading} onClick={bulkCreateRentRange}>\r\n                    {bulkLoading ? 'Creating...' : 'Create Rent Bills'}\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activePanel === 'billList' && (\r\n              <div className=\"bill-list-container\">\r\n                <h2 className=\"form-heading\">All Bills</h2>\r\n                <div className=\"filters-row\">\r\n                  <select className=\"select\" value={filterTenantId} onChange={(e) => { setFilterTenantId(e.target.value); }}>\r\n                    <option value=\"\">All Tenants</option>\r\n                    {tenants.map(t => <option key={t.id} value={t.id}>{t.name} (Flat {t.flatNumber})</option>)}\r\n                  </select>\r\n                  <select className=\"select\" value={filterType} onChange={(e) => { setFilterType(e.target.value); }}>\r\n                    <option value=\"all\">All Types</option>\r\n                    <option value=\"rent\">Rent</option>\r\n                    <option value=\"electricity\">Electricity</option>\r\n                  </select>\r\n                  <select className=\"select\" value={filterMonth} onChange={(e) => { setFilterMonth(e.target.value); }}>\r\n                    <option value=\"all\">All Months</option>\r\n                    {MONTHS.map(m => <option key={m} value={m}>{m}</option>)}\r\n                  </select>\r\n                  <select className=\"select\" value={filterYear} onChange={(e) => { setFilterYear(e.target.value); }}>\r\n                    {yearOptions.map(y => <option key={y} value={y}>{y === 'all' ? 'All Years' : y}</option>)}\r\n                  </select>\r\n                  <select className=\"select\" value={filterStatus} onChange={(e) => { setFilterStatus(e.target.value); }}>\r\n                    <option value=\"all\">All Status</option>\r\n                    <option value=\"Pending\">Pending</option>\r\n                    <option value=\"Paid\">Paid</option>\r\n                  </select>\r\n                  <select className=\"select\" value={filterAddedBy} onChange={(e) => { setFilterAddedBy(e.target.value); }}>\r\n                    {addedByOptions.map(a => <option key={a} value={a}>{a === 'all' ? 'All Added By' : a}</option>)}\r\n                  </select>\r\n                  <span className=\"search-input\">\r\n                    <FaSearch style={{ marginRight: 6 }} />\r\n                    <input className=\"input\" type=\"text\" placeholder=\"Search ref/type/month/year\" value={filterSearch} onChange={(e) => { setFilterSearch(e.target.value); }} />\r\n                  </span>\r\n                  <button className=\"btn\" onClick={() => { setFilterTenantId(''); setFilterType('all'); setFilterMonth('all'); setFilterYear('all'); setFilterStatus('all'); setFilterAddedBy('all'); setFilterSearch(''); }}>Reset</button>\r\n                  <button className=\"btn\" onClick={() => exportCSV()}><FaDownload style={{ marginRight: 6 }} />Export CSV</button>\r\n                  <button className=\"btn btn-primary\" onClick={bulkMarkPaid}><FaCheck style={{ marginRight: 6 }} />Mark All Filtered Paid</button>\r\n                </div>\r\n\r\n                <div className=\"summary-cards\">\r\n                  <SummaryCard label={<><FaMoneyBillWave style={iconStyle} /> Total Rent (filtered)</>} value={`₹${(totalsFiltered.rent)}`} />\r\n                  <SummaryCard label={<><FaBolt style={iconStyle} /> Total Electricity (filtered)</>} value={`₹${(totalsFiltered.elec)}`} />\r\n                  <SummaryCard label={<><FaReceipt style={iconStyle} /> Grand Total (filtered)</>} value={`₹${(totalsFiltered.grand)}`} />\r\n                </div>\r\n\r\n                <div className=\"tenant-table bill-table\">\r\n                  <h3 className=\"table-title\"><FaReceipt style={iconStyle} /> Bill List</h3>\r\n                  <table className=\"table\">\r\n                    <thead className=\"thead\">\r\n                      <tr>\r\n                        <th>Tenant</th>\r\n                        <th>Flat</th>\r\n                        <th>Type</th>\r\n                        <th>Month</th>\r\n                        <th>Year</th>\r\n                        <th>Amount</th>\r\n                        <th>Status</th>\r\n                        <th>Overdue</th>\r\n                        <th>Added By</th>\r\n                        <th>Created At</th>\r\n                        <th>Ref ID</th>\r\n                        <th>Note</th>\r\n                        {/* Split Actions into two columns */}\r\n                        <th>Mark paid</th>\r\n                        <th>Delete</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"tbody\">\r\n                      {paginatedBills.map((b, idx) => {\r\n                        const tenant = tenants.find(t => t.id === b.tenantId);\r\n                        const created = b?.createdAt?.toDate\r\n                          ? b.createdAt.toDate().toLocaleString()\r\n                          : (b?.billFor ? new Date(b.billFor).toLocaleString() : '-');\r\n                        return (\r\n                          <tr key={(b.tenantId || '') + (b.id || idx)}>\r\n                            <td>{tenant?.name || '-'}</td>\r\n                            <td>{tenant?.flatNumber || '-'}</td>\r\n                            <td>{b.type}</td>\r\n                            <td>{b.month}</td>\r\n                            <td>{b.year}</td>\r\n                            <td>{numberFmt.format(Number(b.amount) || 0)}</td>\r\n                            <td>\r\n                              <select\r\n                                className=\"select small\"\r\n                                value={b.status}\r\n                                onChange={(e) => inlineChangeStatus(b, e.target.value)}\r\n                              >\r\n                                <option value=\"Pending\">Pending</option>\r\n                                <option value=\"Paid\">Paid</option>\r\n                              </select>\r\n                            </td>\r\n                            <td>{overdue(b) ? '⚠️' : ''}</td>\r\n                            <td>{b.addedBy || '-'}</td>\r\n                            <td>{created}</td>\r\n                            <td>{b.refId || '-'}</td>\r\n                            <td>\r\n                              <input\r\n                                className=\"input small\"\r\n                                type=\"text\"\r\n                                defaultValue={b.note || ''}\r\n                                onBlur={(e) => inlineUpdateNote(b, e.target.value)}\r\n                                placeholder=\"Add note\"\r\n                              />\r\n                            </td>\r\n\r\n                            {/* New separate column for Mark Paid */}\r\n                            <td>\r\n                              <button\r\n                                className=\"btn btn-small\"\r\n                                disabled={b.status === 'Paid'}\r\n                                onClick={() => markBillPaid(b)}\r\n                              >\r\n                                Mark Paid\r\n                              </button>\r\n                            </td>\r\n\r\n                            {/* New separate column for Delete */}\r\n                            <td>\r\n                              <button\r\n                                className=\"btn btn-small\"\r\n                                style={{ background: 'linear-gradient(135deg, #e53935, #b71c1c)' }}\r\n                                onClick={() => removeBill(b)}\r\n                              >\r\n                                Remove\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n\r\n                      {paginatedBills.length === 0 && (\r\n                        <tr>\r\n                          {/* Increase colSpan by 1 (13 -> 14) since we split Actions into two columns */}\r\n                          <td className=\"no-bills\" colSpan=\"14\" style={{ textAlign: 'center' }}>\r\n                            No bills found.\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n\r\n\r\n                  <div className=\"pagination\">\r\n                    <span>Page</span>\r\n                    <button className=\"btn btn-icon\" disabled={billPage <= 1} onClick={() => setBillPage(p => Math.max(1, p - 1))}><FaChevronLeft /></button>\r\n                    <span className=\"page-indicator\">{billPage}/{totalBillPages}</span>\r\n                    <button className=\"btn btn-icon\" disabled={billPage >= totalBillPages} onClick={() => setBillPage(p => Math.min(totalBillPages, p + 1))}><FaChevronRight /></button>\r\n                    <select className=\"select\" value={settings.pageSize} onChange={(e) => saveSettings({ pageSize: parseInt(e.target.value, 10) || 10 })}>\r\n                      <option value={10}>10</option>\r\n                      <option value={20}>20</option>\r\n                      <option value={50}>50</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"summary-cards\" style={{ marginTop: 16 }}>\r\n                  <SummaryCard\r\n                    label={<><FaMoneyBillWave style={iconStyle} /> Total Rent (all)</>}\r\n                    value={numberFmt.format(totalRentAll)}\r\n                  />\r\n                  <SummaryCard\r\n                    label={<><FaBolt style={iconStyle} /> Total Electricity (all)</>}\r\n                    value={numberFmt.format(totalElecAll)}\r\n                  />\r\n                  <SummaryCard\r\n                    label={<><FaReceipt style={iconStyle} /> Grand Total (all)</>}\r\n                    value={numberFmt.format(totalRentAll + totalElecAll)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n\r\n            {activePanel === 'settings' && (\r\n              <div className=\"settings-panel\">\r\n                <h2 className=\"sp-heading\">Settings</h2>\r\n\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"sp-form\">\r\n                  <div className=\"sp-group\">\r\n                    <input className=\"sp-input sp-span-6\" type=\"email\" placeholder=\"Default Added By Email\" value={settings.addedByEmail} onChange={(e) => saveSettings({ addedByEmail: e.target.value })} />\r\n                    <input className=\"sp-input sp-span-6\" type=\"text\" placeholder=\"Currency Symbol\" value={settings.currency} onChange={(e) => saveSettings({ currency: e.target.value })} />\r\n                  </div>\r\n\r\n                  <div className=\"sp-group\">\r\n                    <input className=\"sp-input sp-span-6\" type=\"number\" placeholder=\"Flat Limit\" value={settings.flatLimit} onChange={(e) => saveSettings({ flatLimit: Number(e.target.value) || 0 })} />\r\n                    <select className=\"sp-select sp-span-6\" value={settings.homeView} onChange={(e) => saveSettings({ homeView: e.target.value })}>\r\n                      <option value=\"currentMonth\">Home shows current month</option>\r\n                      <option value=\"latest\">Home shows latest bill</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"sp-group\">\r\n                    <select className=\"sp-select sp-span-3\" value={settings.homeMonth} onChange={(e) => saveSettings({ homeMonth: e.target.value })}>\r\n                      {MONTHS.map(m => <option key={m} value={m}>{m}</option>)}\r\n                    </select>\r\n                    <select className=\"sp-select sp-span-3\" value={settings.homeYear} onChange={(e) => saveSettings({ homeYear: e.target.value })}>\r\n                      {YEARS.map(y => <option key={y} value={y}>{y}</option>)}\r\n                    </select>\r\n                    <label className=\"sp-checkbox sp-span-3\">\r\n                      <input type=\"checkbox\" checked={settings.showInactive} onChange={(e) => saveSettings({ showInactive: e.target.checked })} />\r\n                      Show inactive tenants\r\n                    </label>\r\n                    <select className=\"sp-select sp-span-3\" value={settings.locale} onChange={(e) => saveSettings({ locale: e.target.value })}>\r\n                      <option value=\"en-IN\">India (en-IN)</option>\r\n                      <option value=\"en-US\">US (en-US)</option>\r\n                      <option value=\"hi-IN\">Hindi (hi-IN)</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"sp-group\">\r\n                    <div className=\"sp-span-4\">\r\n                      <label className=\"sp-label\">Bills per page</label>\r\n                      <select className=\"sp-select\" value={settings.pageSize} onChange={(e) => saveSettings({ pageSize: parseInt(e.target.value, 10) || 10 })}>\r\n                        <option value={10}>10</option>\r\n                        <option value={20}>20</option>\r\n                        <option value={50}>50</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"sp-span-4\"></div>\r\n                    <div className=\"sp-span-4\" style={{ display: 'flex', alignItems: 'end', justifyContent: 'flex-end' }}>\r\n\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n\r\n                <h3 className=\"sp-section-title\">Tenant Management</h3>\r\n\r\n\r\n\r\n\r\n                <div className=\"tenant-table\">\r\n                  <table className=\"sp-table\">\r\n                    <thead className=\"sp-thead\">\r\n                      <tr>\r\n                        <th>Flat</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Rent</th>\r\n                        <th>Status</th>\r\n                        <th>Joined</th>\r\n                        <th>Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"sp-tbody\">\r\n                      {filteredTenants.map(t => (\r\n                        <tr key={t.id}>\r\n                          <td>{t.flatNumber}</td>\r\n                          <td><input className=\"sp-input small\" type=\"text\" defaultValue={t.name} onBlur={(e) => updateTenantDetails(t.id, { name: e.target.value })} /></td>\r\n                          <td><input className=\"sp-input small\" type=\"email\" defaultValue={t.email} onBlur={(e) => updateTenantDetails(t.id, { email: e.target.value })} /></td>\r\n                          <td><input className=\"sp-input small\" type=\"number\" defaultValue={t.rentAmount} onBlur={(e) => updateTenantDetails(t.id, { rentAmount: Number(e.target.value || 0) })} /></td>\r\n                          <td>\r\n                            <label className=\"sp-checkbox\">\r\n                              <input type=\"checkbox\" checked={t.active !== false} onChange={(e) => toggleActiveTenant(t.id, e.target.checked)} />\r\n                              {t.active !== false ? 'Active' : 'Inactive'}\r\n                            </label>\r\n                          </td>\r\n                          <td>{t.joinedOn}</td>\r\n                          <td className=\"sp-actions\">\r\n                            <button className=\"sp-btn small\" onClick={() => exportTenantStatement(t.id)}><FaDownload style={{ marginRight: 4 }} />Statement</button>\r\n                            <button className=\"sp-btn small danger\" onClick={() => removeTenant(t.id)}><FaTrash style={{ marginRight: 4 }} />Remove</button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                      {filteredTenants.length === 0 && (\r\n                        <tr><td className=\"sp-empty\" colSpan=\"7\">No tenants.</td></tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n\r\n            {!activePanel && !loading && (\r\n              <>\r\n                <div className=\"summary-cards\">\r\n                  <SummaryCard label={<><FaUser style={iconStyle} /> Total Tenants</>} value={tenants.filter(t => settings.showInactive ? true : (t.active !== false)).length} />\r\n                  <SummaryCard label={<><FaMoneyBillWave style={iconStyle} /> Total Rent</>} value={numberFmt.format(totalRentAll)} />\r\n                  <SummaryCard label={<><FaBolt style={iconStyle} /> Total Electricity </>} value={(totalsFiltered.elec)} />\r\n                  <SummaryCard label={<><FaBuilding style={iconStyle} /> Flats Occupied</>} value={`${tenants.filter(t => t.active !== false).length} / ${settings.flatLimit}`} />\r\n                  <SummaryCard label={<><FaExclamationTriangle style={iconStyle} /> Rent Pending</>} value={\r\n                    tenants.filter(t => {\r\n                      const b = getCurrentBill(t.id, 'rent');\r\n                      return t.active !== false && (!b || b.status !== 'Paid');\r\n                    }).length\r\n                  } />\r\n                </div>\r\n\r\n                <div className=\"tenant-table\">\r\n                  <div className=\"filters-row\">\r\n                    <span className=\"search-input\">\r\n                      <FaSearch style={{ marginRight: 6 }} />\r\n                      <input className=\"input\" type=\"text\" placeholder=\"Search tenant name or flat\" value={tenantSearch} onChange={(e) => setTenantSearch(e.target.value)} />\r\n                    </span>\r\n                    <select className=\"select\" value={tenantSort} onChange={(e) => setTenantSort(e.target.value)}>\r\n                      <option value=\"flatAsc\">Flat ↑</option>\r\n                      <option value=\"flatDesc\">Flat ↓</option>\r\n                      <option value=\"nameAsc\">Name A-Z</option>\r\n                      <option value=\"nameDesc\">Name Z-A</option>\r\n                    </select>\r\n                  </div>\r\n                  <h3 className=\"table-title\"><FaHome style={iconStyle} /> Tenant List ({settings.homeView === 'currentMonth' ? `${settings.homeMonth} ${settings.homeYear}` : 'Latest bills'})</h3>\r\n                  <table className=\"table\">\r\n                    <thead className=\"thead\">\r\n                      <tr>\r\n                        <th>Flat</th>\r\n                        <th>Name</th>\r\n                        <th>Rent</th>\r\n                        <th>Rent Status</th>\r\n                        <th>Electricity</th>\r\n                        <th>Elec Status</th>\r\n                        <th>Joined On</th>\r\n                        <th>Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"tbody\">\r\n                      {filteredTenants.map(t => {\r\n                        const rentBill = getCurrentBill(t.id, 'rent');\r\n                        const elecBill = getCurrentBill(t.id, 'electricity');\r\n                        return (\r\n                          <tr key={t.id}>\r\n                            <td>{t.flatNumber}</td>\r\n                            <td>{t.name}</td>\r\n                            <td>{rentBill ? `${numberFmt.format(Number(rentBill.amount) || 0)}` : '-'}</td>\r\n                            <td className={rentBill?.status === 'Paid' ? 'paid' : 'due'}>\r\n                              {rentBill\r\n                                ? rentBill.status === 'Paid'\r\n                                  ? '✅ Paid'\r\n                                  : overdue(rentBill)\r\n                                    ? '⚠️ Overdue'\r\n                                    : '❌ Pending'\r\n                                : '—'}\r\n                            </td>\r\n                            <td>{elecBill ? `${numberFmt.format(Number(elecBill.amount) || 0)}` : '-'}</td>\r\n                            <td className={elecBill?.status === 'Paid' ? 'paid' : 'due'}>\r\n                              {elecBill\r\n                                ? elecBill.status === 'Paid'\r\n                                  ? '✅ Paid'\r\n                                  : overdue(elecBill)\r\n                                    ? '⚠️ Overdue'\r\n                                    : '❌ Pending'\r\n                                : '—'}\r\n                            </td>\r\n                            <td>{t.joinedOn}</td>\r\n                            <td>\r\n                              <button className=\"btn btn-small\" onClick={() => exportTenantStatement(t.id)}><FaDownload style={{ marginRight: 4 }} />Statement</button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                      {filteredTenants.length === 0 && (\r\n                        <tr><td className=\"no-tenants\" colSpan=\"8\" style={{ textAlign: 'center' }}>No tenants found.</td></tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                <div style={{ maxWidth: '100%', overflowX: 'auto' }}>\r\n                  <div className=\"bill-list-container\">\r\n                    <h2 className=\"form-heading\">Monthly Total</h2>\r\n\r\n                    <div className=\"summary-cards\">\r\n                      <SummaryCard label={<><FaMoneyBillWave style={iconStyle} /> Total Rent</>} value={`₹${totalsFiltered.rent}`} />\r\n                      <SummaryCard label={<><FaBolt style={iconStyle} /> Total Electricity</>} value={`₹${totalsFiltered.elec}`} />\r\n                      <SummaryCard label={<><FaReceipt style={iconStyle} /> Grand Total</>} value={`₹${totalsFiltered.grand}`} />\r\n                    </div>\r\n\r\n                    <div className=\"tenant-table bill-table\">\r\n                      <h3 className=\"table-title\"><FaReceipt style={iconStyle} /> Bills for {filterMonth} {filterYear}</h3>\r\n\r\n                      <div className=\"table-wrapper\">\r\n                        <table className=\"table\">\r\n                          <thead className=\"thead\">\r\n                            <tr>\r\n                              <th>Tenant</th>\r\n                              <th>Flat</th>\r\n                              <th>Type</th>\r\n                              <th>Month</th>\r\n                              <th>Year</th>\r\n                              <th className=\"ta-right\">Amount</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"tbody\">\r\n                            {paginatedBills.length > 0 ? paginatedBills.map((b, idx) => {\r\n                              const tenant = tenants.find(t => t.id === b.tenantId);\r\n                              return (\r\n                                <tr key={(b.tenantId || '') + (b.id || idx)}>\r\n                                  <td>{tenant?.name || '-'}</td>\r\n                                  <td>{tenant?.flatNumber || '-'}</td>\r\n                                  <td className=\"cap\">{b.type}</td>\r\n                                  <td>{b.month}</td>\r\n                                  <td>{b.year}</td>\r\n                                  <td className=\"ta-right\">{numberFmt.format(Number(b.amount) || 0)}</td>\r\n                                  <td>{b.status}</td>\r\n                                </tr>\r\n                              );\r\n                            }) : (\r\n                              <tr>\r\n                                <td className=\"no-bills\" colSpan=\"7\" style={{ textAlign: 'center' }}>\r\n                                  No bills found for this month.\r\n                                </td>\r\n                              </tr>\r\n                            )}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n\r\n                      <div className=\"pagination\">\r\n                        <span>Page</span>\r\n                        <button className=\"btn btn-icon\" disabled={billPage <= 1} onClick={() => setBillPage(p => Math.max(1, p - 1))}>\r\n                          <FaChevronLeft />\r\n                        </button>\r\n                        <span className=\"page-indicator\">{billPage}/{totalBillPages}</span>\r\n                        <button className=\"btn btn-icon\" disabled={billPage >= totalBillPages} onClick={() => setBillPage(p => Math.min(totalBillPages, p + 1))}>\r\n                          <FaChevronRight />\r\n                        </button>\r\n                        <select className=\"select\" value={settings.pageSize} onChange={(e) => saveSettings({ pageSize: parseInt(e.target.value, 10) || 10 })}>\r\n                          <option value={10}>10</option>\r\n                          <option value={20}>20</option>\r\n                          <option value={50}>50</option>\r\n                        </select>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </>\r\n            )}\r\n\r\n            {loading && (\r\n              <div className=\"loader\">Loading dashboard...</div>\r\n            )}\r\n          </div>\r\n        </main>\r\n      </div>\r\n\r\n      {isMobile && (\r\n        <nav className=\"bottom-nav\">\r\n          <button className=\"btn-nav\" onClick={() => setActivePanel(null)}><FaHome /><span>Home</span></button>\r\n          <button className=\"btn-nav\" onClick={() => setActivePanel('addTenant')}><FaPlus /><span>Tenant</span></button>\r\n          <button className=\"btn-nav\" onClick={() => setActivePanel('setRent')}><FaMoneyBillWave /><span>Rent</span></button>\r\n          <button className=\"btn-nav\" onClick={() => setActivePanel('billList')}><FaReceipt /><span>Bills</span></button>\r\n          <button className=\"btn-nav\" onClick={() => setActivePanel('settings')}><FaCog /><span>Settings</span></button>\r\n        </nav>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n\r\n\r\n"],"names":["iconStyle","color","marginRight","verticalAlign","TENANT_ROLE","MONTHS","CURRENT_YEAR","Date","getFullYear","YEARS","String","SummaryCard","_ref","label","value","_jsxs","className","children","_jsx","BillingForm","_ref2","type","tenants","addedByEmail","onRefreshBills","currency","numberFmt","tenantId","setTenantId","useState","amount","setAmount","month","setMonth","getMonth","year","setYear","note","setNote","loading","setLoading","ok","setOk","err","setErr","currentUnit","setCurrentUnit","rate","setRate","statusMessage","setStatusMessage","lastUnitDefault","setLastUnitDefault","lastUnit","setLastUnit","useEffect","t","setTimeout","clearTimeout","async","prevMonthIndex","indexOf","prevYear","parseInt","prevMonth","prevYearStr","billRef","collection","db","q","query","where","limit","snap","getDocs","empty","_ref3","_prev$currentUnit","prev","docs","data","prevCurr","Number","meterCurrent","isFinite","concat","console","error","loadLastUnit","last","curr","r","units","Math","max","amt","toFixed","onSubmit","e","preventDefault","onChange","target","filter","active","map","id","name","flatNumber","m","y","placeholder","_Fragment","title","style","gap","pointerEvents","n","format","Intl","NumberFormat","maximumFractionDigits","_unused","safeFormatAmt","disabled","onClick","amtNum","dupQ","refId","toUpperCase","monthIdx","billFor","padStart","baseDoc","addedBy","createdAt","serverTimestamp","status","updatedAt","extra","unitsUsed","ratePerUnit","addDoc","_objectSpread","AdminDashboard","setTenants","bills","setBills","activePanel","setActivePanel","formLoading","setFormLoading","formError","setFormError","formSuccess","setFormSuccess","newTenant","setNewTenant","rentAmount","joinedOn","toISOString","split","contact","email","password","isMobile","setIsMobile","window","innerWidth","onResize","addEventListener","removeEventListener","defaultSettings","flatLimit","homeMonth","homeYear","homeView","showInactive","pageSize","locale","settings","setSettings","raw","localStorage","getItem","JSON","parse","useMemo","currencyCode","currencyDisplay","filterTenantId","setFilterTenantId","filterType","setFilterType","filterMonth","setFilterMonth","filterYear","setFilterYear","filterStatus","setFilterStatus","filterAddedBy","setFilterAddedBy","filterSearch","setFilterSearch","billPage","setBillPage","tenantSearch","setTenantSearch","tenantSort","setTenantSort","bulkTenantId","setBulkTenantId","bulkUseTenantRent","setBulkUseTenantRent","bulkAmount","setBulkAmount","bulkStartMonth","setBulkStartMonth","bulkStartYear","setBulkStartYear","bulkEndMonth","setBulkEndMonth","bulkEndYear","setBulkEndYear","bulkLoading","setBulkLoading","saveSettings","next","merged","setItem","stringify","refreshAll","tenantQ","tenantData","docu","all","billsRef","forEach","d","push","_unused2","now","currentMonth","currentYear","byTenant","Map","b","has","set","get","totalRentAll","reduce","s","totalElecAll","addedByOptions","Set","Boolean","Array","from","yearOptions","base","sort","filteredBills","toLowerCase","includes","totalsFiltered","rent","elec","grand","totalBillPages","ceil","length","sortedBills","toMillis","_b$createdAt","_b$createdAt2","toDate","getTime","seconds","slice","a","paginatedBills","start","getCurrentBill","list","find","sameType","_a$createdAt","_b$createdAt3","as","monthIndex","exportCSV","arguments","undefined","rows","_b$createdAt4","x","created","csv","replace","join","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","exportTenantStatement","updateTenantDetails","updateDoc","doc","_unused9","overdue","nowY","nowM","filteredTenants","localeCompare","total","backgroundColor","FaHome","FaPlus","FaMoneyBillWave","FaBolt","FaLayerGroup","FaReceipt","FaCog","handleLogout","auth","getAuth","signOut","catch","FiLogOut","isNaN","some","trim","uid","createUserWithEmailAndPassword","user","setDoc","role","_unused3","required","checked","range","expandRange","sMonth","sYear","eMonth","eYear","sm","em","curY","curM","endY","endM","out","monthKey","targets","customAmount","alert","_unused6","FaSearch","FaDownload","confirm","_unused5","FaCheck","idx","_b$createdAt5","tenant","toLocaleString","_unused1","inlineChangeStatus","defaultValue","onBlur","_unused0","inlineUpdateNote","_unused4","markBillPaid","background","tenantUid","bill","userUid","getTenantUidFromBill","toast","deleteDoc","success","removeBill","colSpan","textAlign","p","FaChevronLeft","min","FaChevronRight","marginTop","display","alignItems","justifyContent","_unused8","toggleActiveTenant","_unused7","removeTenant","FaTrash","FaUser","FaBuilding","FaExclamationTriangle","rentBill","elecBill","maxWidth","overflowX"],"sourceRoot":""}