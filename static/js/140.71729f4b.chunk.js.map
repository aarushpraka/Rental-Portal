{"version":3,"file":"static/js/140.71729f4b.chunk.js","mappings":"sLAKA,MA2FA,EA3FoBA,KAClB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAEnCK,EAAAA,EAAAA,YAAU,KACcC,WACpB,IACE,MAAMC,EAAOC,EAAAA,EAAKC,YAClB,IAAKF,EAAM,OAEX,MAAMG,GAAIC,EAAAA,EAAAA,IACRC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,aACfC,EAAAA,EAAAA,IAAM,MAAO,KAAMP,EAAKQ,MACxBC,EAAAA,EAAAA,IAAQ,YAAa,SAIjBC,SADsBC,EAAAA,EAAAA,IAAQR,IACTS,KAAKC,KAAKC,IAAGC,EAAAA,EAAAA,GAAA,CAAQC,GAAIF,EAAIE,IAAOF,EAAIJ,UACnElB,EAAYkB,EACd,CAAE,MAAOO,GACPC,QAAQtB,MAAMqB,GACdpB,EAAS,mCACX,CAAC,QACCF,GAAW,EACb,GAGFwB,EAAe,GACd,IAKH,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sCACH5B,GACC6B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,SAAC,uBACtB1B,GACF2B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAE1B,IACN,IAApBL,EAASiC,QACXD,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BAEHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACG/B,EAASsB,KAAKY,IACbL,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAEC,SACPH,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAEE,QAAUF,EAAEG,aAAe,MAClCL,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAEG,aAAe,KACtBL,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAEE,UACPJ,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAEI,UACPN,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAEK,QACPP,EAAAA,EAAAA,KAAA,MAAAD,SACGG,EAAEM,UACDR,EAAAA,EAAAA,KAAA,KAAGS,KAAMP,EAAEM,SAAUE,OAAO,SAASC,IAAI,sBAAqBZ,SAAC,iBAI/D,aAbGG,EAAET,SAmBfO,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIY,QAAQ,IAAGb,UAACC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBACxBC,EAAAA,EAAAA,KAAA,MAAIY,QAAQ,IAAGb,UAACF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CAAQ,SAjDpC/B,EAAS6C,QAAO,CAACC,EAAKZ,IAAMY,GAAOZ,EAAEE,QAAU,IAAI,oBAuD7C,C","sources":["pages/tenant/RentHistory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { auth, db } from '../../firebase';\r\nimport { collection, query, where, getDocs, orderBy } from 'firebase/firestore';\r\nimport './RentHistory.css';\r\n\r\nconst RentHistory = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchPayments = async () => {\r\n      try {\r\n        const user = auth.currentUser;\r\n        if (!user) return;\r\n\r\n        const q = query(\r\n          collection(db, 'payments'),\r\n          where('uid', '==', user.uid),\r\n          orderBy('timestamp', 'desc')\r\n        );\r\n\r\n        const querySnapshot = await getDocs(q);\r\n        const data = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\r\n        setPayments(data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to fetch payment history.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPayments();\r\n  }, []);\r\n\r\n  const getTotalPaid = () =>\r\n    payments.reduce((sum, p) => sum + (p.amount || 0), 0);\r\n\r\n  return (\r\n    <div className=\"rent-history\">\r\n      <h2>ðŸ§¾ Rent Payment History</h2>\r\n      {loading ? (\r\n        <div className=\"loader\">Loading history...</div>\r\n      ) : error ? (\r\n        <div className=\"error-box\">{error}</div>\r\n      ) : payments.length === 0 ? (\r\n        <p>No payment records found.</p>\r\n      ) : (\r\n        <div className=\"table-wrapper\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Month</th>\r\n                <th>Amount Paid (â‚¹)</th>\r\n                <th>Electricity (â‚¹)</th>\r\n                <th>Total (â‚¹)</th>\r\n                <th>Method</th>\r\n                <th>Paid On</th>\r\n                <th>Receipt</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {payments.map((p) => (\r\n                <tr key={p.id}>\r\n                  <td>{p.month}</td>\r\n                  <td>{p.amount - (p.electricity || 0)}</td>\r\n                  <td>{p.electricity || 0}</td>\r\n                  <td>{p.amount}</td>\r\n                  <td>{p.method}</td>\r\n                  <td>{p.date}</td>\r\n                  <td>\r\n                    {p.proofURL ? (\r\n                      <a href={p.proofURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                         View Receipt\r\n                      </a>\r\n                    ) : (\r\n                      'â€”'\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td colSpan=\"3\"><strong>Total Paid</strong></td>\r\n                <td colSpan=\"4\"><strong>â‚¹{getTotalPaid()}</strong></td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RentHistory;\r\n"],"names":["RentHistory","payments","setPayments","useState","loading","setLoading","error","setError","useEffect","async","user","auth","currentUser","q","query","collection","db","where","uid","orderBy","data","getDocs","docs","map","doc","_objectSpread","id","err","console","fetchPayments","_jsxs","className","children","_jsx","length","p","month","amount","electricity","method","date","proofURL","href","target","rel","colSpan","reduce","sum"],"sourceRoot":""}