{"version":3,"file":"static/js/477.8584e1fd.chunk.js","mappings":"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","sources":["pages/admin/AdminSettings.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { auth, db } from '../../firebase';\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  updateDoc,\r\n  collection,\r\n  getDocs,\r\n  setDoc,\r\n  deleteDoc,\r\n} from 'firebase/firestore';\r\nimport './AdminSettings.css';\r\n\r\nconst AdminSettings = () => {\r\n  const [admin, setAdmin] = useState({});\r\n  const [flats, setFlats] = useState([]);\r\n  const [rentCycle, setRentCycle] = useState({\r\n    dueDate: '5',\r\n    autoReset: false,\r\n    reminderDays: '2',\r\n  });\r\n  const [templates, setTemplates] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchSettings = async () => {\r\n      const user = auth.currentUser;\r\n      if (!user) return;\r\n\r\n      try {\r\n        const adminRef = doc(db, 'admins', user.uid);\r\n        const flatRef = collection(db, 'flats');\r\n        const templateRef = collection(db, 'notificationTemplates');\r\n\r\n        const [adminSnap, flatSnap, templateSnap] = await Promise.all([\r\n          getDoc(adminRef),\r\n          getDocs(flatRef),\r\n          getDocs(templateRef),\r\n        ]);\r\n\r\n        if (adminSnap.exists()) setAdmin(adminSnap.data());\r\n        setFlats(flatSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n        setTemplates(templateSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n      } catch (err) {\r\n        console.error('Error fetching settings:', err);\r\n        setMessage('❌ Failed to load settings.');\r\n      }\r\n    };\r\n\r\n    fetchSettings();\r\n  }, []);\r\n\r\n  const handleAdminChange = (e) => {\r\n    setAdmin({ ...admin, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const saveAdminProfile = async () => {\r\n    try {\r\n      const adminRef = doc(db, 'admins', auth.currentUser.uid);\r\n      await updateDoc(adminRef, admin);\r\n      setMessage('✅ Profile updated');\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage('❌ Failed to update profile.');\r\n    }\r\n  };\r\n\r\n  const updateRentCycle = async () => {\r\n    try {\r\n      const settingsRef = doc(db, 'settings', 'rentCycle');\r\n      await setDoc(settingsRef, rentCycle);\r\n      setMessage('✅ Rent cycle updated');\r\n    } catch (err) {\r\n      setMessage('❌ Rent cycle update failed.');\r\n    }\r\n  };\r\n\r\n  const clearRentStatus = async () => {\r\n    try {\r\n      const tenantRef = collection(db, 'users');\r\n      const tenants = await getDocs(tenantRef);\r\n\r\n      const updates = tenants.docs.map(async (t) => {\r\n        const data = t.data();\r\n        if (data.role === 'tenant') {\r\n          await updateDoc(doc(db, 'users', t.id), { rentStatus: 'Unpaid' });\r\n        }\r\n      });\r\n\r\n      await Promise.all(updates);\r\n      setMessage('⚠️ Rent statuses reset for all tenants');\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage('❌ Failed to reset rent statuses');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-settings\">\r\n      <h2>⚙️ Admin Settings</h2>\r\n      {message && <div className=\"message-box\">{message}</div>}\r\n\r\n      {/* Admin Profile */}\r\n      <section>\r\n        <h3>🧑‍💼 Admin Profile</h3>\r\n        <label>Name: <input name=\"name\" value={admin.name || ''} onChange={handleAdminChange} /></label>\r\n        <label>Email: <input value={admin.email || ''} disabled /></label>\r\n        <label>Phone: <input name=\"phone\" value={admin.phone || ''} onChange={handleAdminChange} /></label>\r\n        <label>UPI ID: <input name=\"upi\" value={admin.upi || ''} onChange={handleAdminChange} /></label>\r\n        <button onClick={saveAdminProfile}>💾 Save Profile</button>\r\n        <button onClick={() => auth.sendPasswordResetEmail(admin.email)}>🔐 Reset Password</button>\r\n      </section>\r\n\r\n      {/* Flat Settings */}\r\n      <section>\r\n        <h3>🏘️ Flat Settings</h3>\r\n        <table>\r\n          <thead>\r\n            <tr><th>Flat</th><th>Rent</th><th>Status</th><th>Action</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            {flats.map(f => (\r\n              <tr key={f.id}>\r\n                <td>{f.flatNumber}</td>\r\n                <td>₹{f.rent}</td>\r\n                <td>{f.status}</td>\r\n                <td>\r\n                  <button>Edit</button>\r\n                  <button onClick={() => deleteDoc(doc(db, 'flats', f.id))}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button>➕ Add Flat</button>\r\n      </section>\r\n\r\n      {/* Rent Cycle Settings */}\r\n      <section>\r\n        <h3>📅 Rent Cycle Settings</h3>\r\n        <label>Due Date:\r\n          <input type=\"number\" value={rentCycle.dueDate} onChange={(e) => setRentCycle({ ...rentCycle, dueDate: e.target.value })} />\r\n        </label>\r\n        <label>Auto Reset:\r\n          <input type=\"checkbox\" checked={rentCycle.autoReset} onChange={(e) => setRentCycle({ ...rentCycle, autoReset: e.target.checked })} />\r\n        </label>\r\n        <label>Reminder Days Before:\r\n          <input type=\"number\" value={rentCycle.reminderDays} onChange={(e) => setRentCycle({ ...rentCycle, reminderDays: e.target.value })} />\r\n        </label>\r\n        <button onClick={updateRentCycle}>💾 Update Rent Cycle</button>\r\n      </section>\r\n\r\n      {/* Notification Templates */}\r\n      <section>\r\n        <h3>📨 Notification Templates</h3>\r\n        <ul>\r\n          {templates.map(t => (\r\n            <li key={t.id}>\r\n              <strong>{t.name}</strong>: {t.message}\r\n              <button>Edit</button>\r\n              <button onClick={() => deleteDoc(doc(db, 'notificationTemplates', t.id))}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button>➕ Add Template</button>\r\n      </section>\r\n\r\n      {/* Danger Zone */}\r\n      <section className=\"danger-zone\">\r\n        <h3>❗ Danger Zone</h3>\r\n        <button onClick={clearRentStatus}>❌ Reset All Rent Statuses</button>\r\n        <button>❌ Delete Tenant</button>\r\n        <button>❌ Reset All Flat Data</button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSettings;\r\n"],"names":["AdminSettings","admin","setAdmin","useState","flats","setFlats","rentCycle","setRentCycle","dueDate","autoReset","reminderDays","templates","setTemplates","message","setMessage","useEffect","async","user","auth","currentUser","adminRef","doc","db","uid","flatRef","collection","templateRef","adminSnap","flatSnap","templateSnap","Promise","all","getDoc","getDocs","exists","data","docs","map","_objectSpread","id","err","console","error","fetchSettings","handleAdminChange","e","target","name","value","_jsxs","className","children","_jsx","onChange","email","disabled","phone","upi","onClick","updateDoc","sendPasswordResetEmail","f","flatNumber","rent","status","deleteDoc","type","checked","settingsRef","setDoc","t","tenantRef","updates","role","rentStatus"],"sourceRoot":""}