{"version":3,"file":"static/js/784.47f26e08.chunk.js","mappings":"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","sources":["pages/tenant/RentPayment.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { auth, db } from '../../firebase';\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  serverTimestamp,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\nimport './RentPayment.css';\r\n\r\nconst RentPayment = () => {\r\n  const [tenant, setTenant] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [paymentMethod, setPaymentMethod] = useState('UPI');\r\n  const [proof, setProof] = useState('');\r\n  const [preview, setPreview] = useState('');\r\n  const [paid, setPaid] = useState(false);\r\n  const [receipt, setReceipt] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTenant = async () => {\r\n      const user = auth.currentUser;\r\n      if (!user) return;\r\n\r\n      try {\r\n        const docRef = doc(db, 'users', user.uid);\r\n        const docSnap = await getDoc(docRef);\r\n        if (docSnap.exists()) {\r\n          const data = docSnap.data();\r\n          setTenant(data);\r\n          setPaid(data.rentStatus === 'Paid');\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to load tenant data.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTenant();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selected = e.target.files[0];\r\n    if (selected && selected.type.startsWith('image/')) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreview(reader.result);\r\n        setProof(reader.result); // base64 string\r\n      };\r\n      reader.readAsDataURL(selected);\r\n    } else {\r\n      setError('Please select a valid image file.');\r\n    }\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n    if (!tenant) return;\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const total = tenant.rentAmount + (tenant.electricityBill?.amount || 0);\r\n      const paymentId = `TXN${Date.now()}`;\r\n      const uid = auth.currentUser.uid;\r\n\r\n      await setDoc(doc(db, 'payments', paymentId), {\r\n        uid,\r\n        name: tenant.name,\r\n        flat: tenant.flatNumber,\r\n        amount: total,\r\n        method: paymentMethod,\r\n        month: 'July 2025',\r\n        proofBase64: proof || '', // Store base64 image directly\r\n        date: new Date().toLocaleDateString(),\r\n        timestamp: serverTimestamp(),\r\n      });\r\n\r\n      await updateDoc(doc(db, 'users', uid), {\r\n        rentStatus: 'Paid',\r\n      });\r\n\r\n      setReceipt({\r\n        id: paymentId,\r\n        amount: total,\r\n        date: new Date().toLocaleDateString(),\r\n        proofBase64: proof,\r\n      });\r\n\r\n      setPaid(true);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Payment failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"loader\">Loading payment info...</div>;\r\n  if (!tenant) return <div className=\"error-box\">Tenant data not found.</div>;\r\n\r\n  const { name, flatNumber, rentAmount, electricityBill, rentDueDate } = tenant;\r\n  const totalDue = rentAmount + (electricityBill?.amount || 0);\r\n\r\n  return (\r\n    <div className=\"rent-payment\">\r\n      <h2>💳 Rent Payment</h2>\r\n      <p className=\"subtitle\">Pay your monthly rent and utility charges</p>\r\n\r\n      <div className=\"tenant-info\">\r\n        <p>👤 <strong>Name:</strong> {name}</p>\r\n        <p>🏠 <strong>Flat:</strong> {flatNumber}</p>\r\n        <p>📅 <strong>Month:</strong> July 2025</p>\r\n      </div>\r\n\r\n      <div className=\"payment-breakdown\">\r\n        <h3>📋 Payment Breakdown</h3>\r\n        <ul>\r\n          <li>Rent: ₹{rentAmount}</li>\r\n          <li>Electricity: ₹{electricityBill?.amount || 0}</li>\r\n          <li>Other Charges: ₹0</li>\r\n        </ul>\r\n        <hr />\r\n        <p className={`total-due ${paid ? 'paid' : 'due'}`}>\r\n          🔢 Total Due: ₹{totalDue}\r\n        </p>\r\n        <p><strong>Due Date:</strong> {rentDueDate}</p>\r\n      </div>\r\n\r\n      {paid ? (\r\n        <div className=\"paid-box\">✅ You've already paid for July.</div>\r\n      ) : (\r\n        <>\r\n          <div className=\"payment-method\">\r\n            <h4>💳 Select Payment Method</h4>\r\n            <select value={paymentMethod} onChange={(e) => setPaymentMethod(e.target.value)}>\r\n              <option value=\"UPI\">UPI</option>\r\n              <option value=\"Bank Transfer\">Bank Transfer</option>\r\n              <option value=\"Cash\">Cash</option>\r\n            </select>\r\n            {paymentMethod === 'UPI' && (\r\n              <p className=\"upi-info\">Send to UPI ID: <strong>myflats@upi</strong></p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"upload-proof\">\r\n            <h4>📤 Upload Payment Proof (Optional)</h4>\r\n            <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n            {preview && <img src={preview} alt=\"Preview\" width=\"200\" />}\r\n          </div>\r\n\r\n          <button\r\n            className=\"pay-btn\"\r\n            onClick={handlePayment}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Processing...' : `Pay ₹${totalDue} Now`}\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {receipt && (\r\n        <div className=\"receipt-box\">\r\n          <h4>📄 Payment Receipt</h4>\r\n          <p><strong>Receipt ID:</strong> {receipt.id}</p>\r\n          <p><strong>Amount:</strong> ₹{receipt.amount}</p>\r\n          <p><strong>Date:</strong> {receipt.date}</p>\r\n          {receipt.proofBase64 && (\r\n            <>\r\n              <p><strong>Proof of Payment:</strong></p>\r\n              <img src={receipt.proofBase64} alt=\"Proof of Payment\" width=\"200\" />\r\n            </>\r\n          )}\r\n          <button onClick={() => window.location.href = '/history'}>\r\n            View Payment History\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {error && <div className=\"error-box\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RentPayment;\r\n"],"names":["RentPayment","tenant","setTenant","useState","loading","setLoading","paymentMethod","setPaymentMethod","proof","setProof","preview","setPreview","paid","setPaid","receipt","setReceipt","error","setError","useEffect","async","user","auth","currentUser","docRef","doc","db","uid","docSnap","getDoc","exists","data","rentStatus","err","fetchTenant","_jsx","className","children","name","flatNumber","rentAmount","electricityBill","rentDueDate","totalDue","amount","_jsxs","concat","_Fragment","value","onChange","e","target","type","accept","selected","files","startsWith","reader","FileReader","onloadend","result","readAsDataURL","src","alt","width","onClick","_tenant$electricityBi","total","paymentId","Date","now","setDoc","flat","method","month","proofBase64","date","toLocaleDateString","timestamp","serverTimestamp","updateDoc","id","console","disabled","window","location","href"],"sourceRoot":""}