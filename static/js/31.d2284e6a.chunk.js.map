{"version":3,"file":"static/js/31.d2284e6a.chunk.js","mappings":"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","sources":["pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth, db } from '../firebase';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const uid = userCredential.user.uid;\r\n      const userDoc = await getDoc(doc(db, 'users', uid));\r\n\r\n      if (!userDoc.exists()) throw new Error('User role not found.');\r\n      const role = userDoc.data().role;\r\n      if (role === 'admin' || role === 'tenant') {\r\n        navigate('/', { replace: true });\r\n      } else {\r\n        throw new Error('Invalid user role.');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Login failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <h1 className=\"app-title\">Rental Portal</h1>\r\n        <p className=\"welcome-msg\">Welcome back! Please log in to continue.</p>\r\n\r\n        {error && <div className=\"error-box\">{error}</div>}\r\n\r\n        <form onSubmit={handleLogin} className=\"login-form\">\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <div className=\"input-icon\">\r\n              <i className=\"fas fa-envelope icon-left\"></i>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"you@example.com\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <label>Password</label>\r\n            <div className=\"input-icon password-wrapper\">\r\n              <i className=\"fas fa-lock icon-left\"></i>\r\n              <input\r\n                type={showPassword ? 'text' : 'password'}\r\n                placeholder=\"Enter your password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"toggle-password\"\r\n                onClick={() => setShowPassword((prev) => !prev)}\r\n              >\r\n                <i className={` fas ${showPassword ? 'fa-eye-slash' : 'fa-eye'}`}></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-options\">\r\n            <label className=\"remember-me\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={rememberMe}\r\n                onChange={() => setRememberMe(!rememberMe)}\r\n              />\r\n              Remember me\r\n            </label>\r\n            <a href=\"/forgot-password\" className=\"forgot-link\">Forgot Password?</a>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"login-btn\"\r\n            disabled={!email || !password || loading}\r\n          >\r\n            {loading ? 'Logging in...' : 'Login'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["LoginPage","email","setEmail","useState","password","setPassword","showPassword","setShowPassword","error","setError","loading","setLoading","rememberMe","setRememberMe","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","uid","signInWithEmailAndPassword","auth","user","userDoc","getDoc","doc","db","exists","Error","role","data","replace","err","message","type","placeholder","value","onChange","target","required","onClick","prev","concat","checked","href","disabled"],"sourceRoot":""}